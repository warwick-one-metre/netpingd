#!/usr/bin/env python3
#
# This file is part of netpingd.
#
# netpingd is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# netpingd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with netpingd.  If not, see <http://www.gnu.org/licenses/>.

"""Commandline client for querying the latest ping from google and ngtshead"""

import datetime
import json
import os
import sys
import Pyro4

PYRO_HOST = '192.168.0.102'
PYRO_PORT = 9012
PYRO_NAME = 'onemetre_netping_daemon'
PYRO_COMM_TIMEOUT = 5

SCRIPT_NAME = os.path.basename(sys.argv[0])
sys.excepthook = Pyro4.util.excepthook

def print_status():
    """Prints the latest data in human-readable form"""
    latest = None
    try:
        with Pyro4.Proxy('PYRO:' + PYRO_NAME + '@' + PYRO_HOST + ':' + str(PYRO_PORT)) as netping:
            latest = netping.last_measurement()
    except Pyro4.errors.CommunicationError:
        print('error: unable to communicate with the network ping daemon')
        return 1

    if latest is not None:
        date = datetime.datetime.strptime(latest['date'], '%Y-%m-%dT%H:%M:%SZ')
        print('Data received \033[1m{}\033[0m:'.format(date))
        print('          Google: \033[1m{:.1f} ms\033[0m'.format(latest['google']))
        print('        NGTSHead: \033[1m{:.1f} ms\033[0m'.format(latest['ngtshead']))
        print()
    else:
        print('error: failed to query data')

    return 0

def print_json():
    """Prints the latest data in machine-readable form"""
    latest = None
    try:
        with Pyro4.Proxy('PYRO:' + PYRO_NAME + '@' + PYRO_HOST + ':' + str(PYRO_PORT)) as netping:
            latest = netping.last_measurement()
    except Pyro4.errors.CommunicationError:
        print('error: unable to communicate with the network ping daemon')
        return 1

    print(json.dumps(latest))

    return 0

def print_usage(name):
    """Prints the utility help"""
    print('Usage: {} <command>'.format(name))
    print()
    print('   status      print a human-readable summary of the ping times')
    print('   json        print a machine-readable summary of the ping times')
    print()

    return 1

if __name__ == '__main__':
    if len(sys.argv) == 1:
        sys.exit(print_usage(SCRIPT_NAME))

    Pyro4.config.COMMTIMEOUT = PYRO_COMM_TIMEOUT
    if sys.argv[1] == 'status':
        sys.exit(print_status())
    elif sys.argv[1] == 'json':
        sys.exit(print_json())

    # Command not found
    sys.exit(print_usage(SCRIPT_NAME))

